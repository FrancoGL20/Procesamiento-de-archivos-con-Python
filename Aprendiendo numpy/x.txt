Parameters:

- **index**: array-like, optional
	
	New labels for the index. Preferably an Index object to avoid duplicating data.

- **axis**: int or str, optional
	
	Unused.

- **method**: {None, ‘backfill’/’bfill’, ‘pad’/’ffill’, ‘nearest’}
	
	Method to use for filling holes in reindexed DataFrame. Please note: this is only applicable to DataFrames/Series with a monotonically increasing/decreasing index.

None (default): don’t fill gaps

pad / ffill: Propagate last valid observation forward to next valid.

backfill / bfill: Use next valid observation to fill gap.

nearest: Use nearest valid observations to fill gap.

- **copy**: bool, default True
	
	Return a new object, even if the passed indexes are the same.

- **level**: int or name
	
	Broadcast across a level, matching Index values on the passed MultiIndex level.

- **fill_value**: scalar, default np.nan
	
	Value to use for missing values. Defaults to NaN, but can be any “compatible” value.

- **limit**: int, default None
	
	Maximum number of consecutive elements to forward or backward fill.

- **tolerance**: optional
	
	Maximum distance between original and new labels for inexact matches. The values of the index at the matching locations most satisfy the equation abs(index[indexer] - target) <= tolerance.

Tolerance may be a scalar value, which applies the same tolerance to all values, or list-like, which applies variable tolerance per element. List-like includes list, tuple, array, Series, and must be the same size as the index and its dtype must exactly match the index’s type.